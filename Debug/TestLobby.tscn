[gd_scene load_steps=7 format=3 uid="uid://cspt768lf5i5h"]

[ext_resource type="Script" path="res://LuaScripting/lua_runner.gd" id="2_n3bqh"]
[ext_resource type="PackedScene" uid="uid://b2honlwjdjcpd" path="res://Players/Player.tscn" id="2_xim1p"]

[sub_resource type="GDScript" id="GDScript_dbidp"]
script/source = "extends Node

@export var player: Resource

# These signals can be connected to by a UI lobby scene or the game scene.
signal player_connected(peer_id, player_info)
signal player_disconnected(peer_id)
signal server_disconnected

const PORT = 25522
const DEFAULT_SERVER_IP = \"127.0.0.1\" # IPv4 localhost
const MAX_CONNECTIONS = 20

func join_game(address = \"\"):
	print(\"The address is\" + address)
	if address.is_empty():
		address = DEFAULT_SERVER_IP
	var peer = ENetMultiplayerPeer.new()
	var error = peer.create_client(address, PORT)
	if error:
		return error
	multiplayer.multiplayer_peer = peer


func create_game():
	var peer = ENetMultiplayerPeer.new()
	var error = peer.create_server(PORT, MAX_CONNECTIONS)
	if error:
		return error
	print(\"Running on port\" + str(PORT))
	multiplayer.multiplayer_peer = peer
	multiplayer.peer_connected.connect(_on_player_connected)
	multiplayer.peer_disconnected.connect(destroy_player)

# When a peer connects, send them my player info.
# This allows transfer of all desired data for each player, not only the unique ID.
func _on_player_connected(id: int) -> void:
	var p = player.instantiate()
	p.name = str(id)
	p.peer_id = id
	
	$Players.add_child(p)

func destroy_player(id : int) -> void:
	# Delete this peer's node.
	$Players.get_node(str(id)).queue_free()
"

[sub_resource type="WorldBoundaryShape3D" id="WorldBoundaryShape3D_imkuv"]

[sub_resource type="PlaneMesh" id="PlaneMesh_t7cvj"]
size = Vector2(25, 25)

[sub_resource type="CylinderMesh" id="CylinderMesh_aqcss"]

[node name="TestLobby" type="Node3D"]
script = SubResource("GDScript_dbidp")
player = ExtResource("2_xim1p")

[node name="Players" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 47.1315, 0)

[node name="RigidBody3D" type="StaticBody3D" parent="."]

[node name="CollisionShape3D" type="CollisionShape3D" parent="RigidBody3D"]
shape = SubResource("WorldBoundaryShape3D_imkuv")

[node name="MultiplayerSpawner" type="MultiplayerSpawner" parent="."]
_spawnable_scenes = PackedStringArray("res://Players/Player.tscn")
spawn_path = NodePath("../Players")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
mesh = SubResource("PlaneMesh_t7cvj")
skeleton = NodePath("../RigidBody3D")

[node name="MeshInstance3D2" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -8.43219, 1.87376, 0)
mesh = SubResource("CylinderMesh_aqcss")
script = ExtResource("2_n3bqh")
lua_script = "local time = 0

function process()
	time = time + 0.03
	x = math.sin(time)
	y = math.cos(time)
	z = math.tan(time /30)
	set_position(x, y, z)
end"

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(0.812161, 0.5144, -0.275296, -0.226106, 0.712486, 0.664259, 0.537839, -0.477239, 0.694962, 0, 10.0019, 0)
shadow_enabled = true
directional_shadow_blend_splits = true
